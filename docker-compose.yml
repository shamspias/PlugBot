x-env: &default-env
  env_file:
    - .env

networks:
  plugbot-network:

volumes:
  postgres_data:
  redis_data:

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    <<: *default-env
    environment:
      # keep image-specific init args here; everything else comes from .env
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - plugbot-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    <<: *default-env
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_HOST_PORT}:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - plugbot-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    <<: *default-env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      # optional in dev, safe to keep
      mailpit:
        condition: service_started
    # all runtime env (DATABASE_URL, REDIS_URL, CORS, SMTP, etc.) come from .env
    ports:
      - "${BACKEND_PORT}:8000"
    volumes:
      - ./backend/app:/app/app:ro
      - ./backend/alembic:/app/alembic:ro
    command: >
      sh -c "alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - plugbot-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # comes from .env; ensures `docker compose build` picks up changes
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    restart: unless-stopped
    <<: *default-env
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "${FRONTEND_PORT}:3000"
    environment:
      # keep NODE_ENV here or move to .env if you prefer
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - plugbot-network

  # local/dev SMTP sink with web UI
  mailpit:
    image: axllent/mailpit:latest
    restart: unless-stopped
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web UI
    networks:
      - plugbot-network
